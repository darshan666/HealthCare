// Generated by view binder compiler. Do not edit!
package com.example.hc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hc.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputLayout LPassword;

  @NonNull
  public final Button LRegisterBtn;

  @NonNull
  public final TextInputLayout LUsername;

  @NonNull
  public final Button forgetpassword;

  @NonNull
  public final ImageView imgLogin;

  @NonNull
  public final Button loginBtn;

  private LoginBinding(@NonNull LinearLayout rootView, @NonNull TextInputLayout LPassword,
      @NonNull Button LRegisterBtn, @NonNull TextInputLayout LUsername,
      @NonNull Button forgetpassword, @NonNull ImageView imgLogin, @NonNull Button loginBtn) {
    this.rootView = rootView;
    this.LPassword = LPassword;
    this.LRegisterBtn = LRegisterBtn;
    this.LUsername = LUsername;
    this.forgetpassword = forgetpassword;
    this.imgLogin = imgLogin;
    this.loginBtn = loginBtn;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.L_password;
      TextInputLayout LPassword = ViewBindings.findChildViewById(rootView, id);
      if (LPassword == null) {
        break missingId;
      }

      id = R.id.L_registerBtn;
      Button LRegisterBtn = ViewBindings.findChildViewById(rootView, id);
      if (LRegisterBtn == null) {
        break missingId;
      }

      id = R.id.L_username;
      TextInputLayout LUsername = ViewBindings.findChildViewById(rootView, id);
      if (LUsername == null) {
        break missingId;
      }

      id = R.id.forgetpassword;
      Button forgetpassword = ViewBindings.findChildViewById(rootView, id);
      if (forgetpassword == null) {
        break missingId;
      }

      id = R.id.img_login;
      ImageView imgLogin = ViewBindings.findChildViewById(rootView, id);
      if (imgLogin == null) {
        break missingId;
      }

      id = R.id.loginBtn;
      Button loginBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginBtn == null) {
        break missingId;
      }

      return new LoginBinding((LinearLayout) rootView, LPassword, LRegisterBtn, LUsername,
          forgetpassword, imgLogin, loginBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
