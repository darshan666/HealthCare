// Generated by view binder compiler. Do not edit!
package com.example.hc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hc.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RegisterBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputLayout email;

  @NonNull
  public final TextInputLayout fullname;

  @NonNull
  public final ImageView imgRegister;

  @NonNull
  public final TextInputLayout password;

  @NonNull
  public final TextInputLayout phone;

  @NonNull
  public final TextView regSubtitle;

  @NonNull
  public final Button registerbtn;

  @NonNull
  public final TextInputLayout username;

  private RegisterBinding(@NonNull ScrollView rootView, @NonNull TextInputLayout email,
      @NonNull TextInputLayout fullname, @NonNull ImageView imgRegister,
      @NonNull TextInputLayout password, @NonNull TextInputLayout phone,
      @NonNull TextView regSubtitle, @NonNull Button registerbtn,
      @NonNull TextInputLayout username) {
    this.rootView = rootView;
    this.email = email;
    this.fullname = fullname;
    this.imgRegister = imgRegister;
    this.password = password;
    this.phone = phone;
    this.regSubtitle = regSubtitle;
    this.registerbtn = registerbtn;
    this.username = username;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static RegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.email;
      TextInputLayout email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.fullname;
      TextInputLayout fullname = ViewBindings.findChildViewById(rootView, id);
      if (fullname == null) {
        break missingId;
      }

      id = R.id.img_register;
      ImageView imgRegister = ViewBindings.findChildViewById(rootView, id);
      if (imgRegister == null) {
        break missingId;
      }

      id = R.id.password;
      TextInputLayout password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.phone;
      TextInputLayout phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.reg_subtitle;
      TextView regSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (regSubtitle == null) {
        break missingId;
      }

      id = R.id.registerbtn;
      Button registerbtn = ViewBindings.findChildViewById(rootView, id);
      if (registerbtn == null) {
        break missingId;
      }

      id = R.id.username;
      TextInputLayout username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new RegisterBinding((ScrollView) rootView, email, fullname, imgRegister, password,
          phone, regSubtitle, registerbtn, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
